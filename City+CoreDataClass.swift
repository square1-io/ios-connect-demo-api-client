/*
 * City
 *
 * Generated By LaravelConnect for iOS on 2018-01-07 21:16:57
 *
 */
 
import Foundation
import CoreData



@objc(City)
public class City: NSManagedObject, Decodable {

    enum CodingKeys: String, CodingKey  {
        case id = "id"
case name = "name"
case localName = "local_name"
case lat = "lat"
case lng = "lng"
case createdAt = "created_at"
case updatedAt = "updated_at"
case countryId = "country_id"
    }

    class var modelPath: String {       
        return "city"
    }
    
    class var primaryKey: String {       
        return "id"
    }

    required convenience public init(from decoder: Decoder) throws {
        // Create NSEntityDescription with NSManagedObjectContext
        guard let contextUserInfoKey = CodingUserInfoKey.context,
            let managedObjectContext = decoder.userInfo[contextUserInfoKey] as? NSManagedObjectContext,
            let entity = NSEntityDescription.entity(forEntityName: "City", in: managedObjectContext) else {
                fatalError("Failed to decode City!")
        }
        self.init(entity: entity, insertInto: nil)
        
        // Decode
        
        
    }

}


extension City {

@NSManaged  public var id: Int64
@NSManaged  public var name: String
@NSManaged  public var localName: String
@NSManaged  public var lat: Double
@NSManaged  public var lng: Double
@NSManaged  public var createdAt: NSDate
@NSManaged  public var updatedAt: NSDate
@NSManaged  public var countryId: Int64
 

@NSManaged  public var users: NSSet
@NSManaged  public var country: Country
 

// MARK: Generated accessors for users
@objc(addUsersObject:)
@NSManaged  public func addToUsers(_ value: User)

@objc(removeUsersObject:)
 @NSManaged  public func removeFromUsers(_ value: User)

@objc(addUsers:)
@NSManaged  public func addToUsers(_ values: NSSet)

@objc(removeUsers:)
@NSManaged  public func removeFromUsers(_ values: NSSet)

  

    @nonobjc  public class func fetchRequest() -> NSFetchRequest<City> {
        return NSFetchRequest<City>(entityName: "City")
    }

}
